{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs-extra\"","webpack:///external \"@babel/polyfill\"","webpack:///./src/index.js","webpack:///./src/generator.js","webpack:///external \"react\"","webpack:///external \"ink\"","webpack:///external \"ink-text-input\"","webpack:///external \"ink-select-input\"","webpack:///external \"clipboardy\"","webpack:///./src/lingo.js","webpack:///external \"Lingojs\"","webpack:///./src/lingo.config.js","webpack:///external \"luxon\"","webpack:///external \"dotenv\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_generator","_lingo","_ink","render","_react","createElement","SearchQuery","_interopRequireDefault","_inkTextInput","_inkSelectInput","_fsExtra","_clipboardy","console","log","_this","_classCallCheck","this","_getPrototypeOf","state","error","errorInfo","phase","env","spaceId","apiToken","outputLoc","config","quantity","tempKitName","kits","handleIntro","_assertThisInitialized","handleEnvOutput","handleEnvApiToken","handleEnvSpaceId","handleConfigKitQuantity","handleConfigKitName","React","Component","setState","arguments","length","undefined","selection","setNestedStateEnv","setNestedStateConfig","_this$state","concat","_toConsumableArray","Array","from","_ref2","_objectSpread","kv","keys","_ref3","_defineProperty","_ref4","Box","Text","items","label","onSelect","_this$state2","_this$state2$config","JSON","stringify","uGenerateLAFBoilerplate","values","fs","outputFile","process","cwd","err","clipboardy","writeSync","_this2","onChange","onSubmit","updatePhase","placeholder","functionName","Color","blue","red","_this3","kitNames","rootDir","cError","_this4","_this5","cOutputMethodSelector","parent","nextPhase","_this6","handleConfigOutput","_this7","handleConfigKitNameSubmit","configName","map","kit","sections","headers","cIntro","cEmptyBoilerplate","cEnvSpaceId","_this$state3","_this$state3$env","cEnvApiToken","cEnvOutputMethod","data","cConfigKitQuantity","_this$state4","cConfigKitName","cConfigOutputMethod","includes","renderIntro","renderEnv","renderConfig","cEnd","_Lingojs","getLingoSetupVariables","SPACE_ID","API_TOKEN","getKitId","_callee","kitName","kitUuid","_args","regeneratorRuntime","wrap","_context","prev","next","lingo","fetchKits","sent","forEach","v","kit_uuid","abrupt","t0","stop","getRelevantAssetContainer","_callee2","kitId","extractTarget","kitVersion","outline","assetContainer","_args2","_context2","fetchKitOutline","extract","xIdx","filter","origin","matchingOrigin","uuid","assign","slimmedOrigin","sectionUuid","extractHeaderName","xHeader","flat","oHeader","idx","matchedOriginHeaders","_matchedOriginHeaders","matchedUuidHeaderKV","extracted","x","buildFileName","assetName","assetKeywords","underscoredKeywords","split","tag","trim","trimmed","replace","join","getAssetUuids","_callee3","container","version","page","limit","assetUuids","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_i","_Object$entries","_Object$entries$_i","header","headerUuid","section","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","fileName","headerAssets","_i2","_Object$entries2","_Object$entries2$_i","_args3","_context3","iterator","done","entries","_slicedToArray","fetchSection","asset_uuid","asset","keywords","push","finish","fetchAssetsForHeading","t1","t2","batchDownload","_callee5","outFormat","outDir","_args5","_context5","_ref","_asyncToGenerator","mark","_callee4","a","buffer","_context4","downloadAsset","toUpperCase","outputFileSync","toLowerCase","_x5","apply","_callee6","outputDirectory","outputFormat","lsConfig","_args6","_context6","Error","setup","t3","t4","t5","t6","t7","t8","t9","t10","testMe","targetOne","targetTwo","capswan"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"fs-extra\");","module.exports = require(\"@babel/polyfill\");","export { SearchQuery, initInk } from \"./generator\";\nexport {\n\tgetRelevantAssetContainers,\n\tgetKitId,\n\tgetLingoSetupVariables,\n\tgetAssetUuids,\n\tformatAssetContainers,\n\tbatchDownload,\n\tinit\n} from \"./lingo\";\n","import React from \"react\";\nimport { render, Box, Text, Color } from \"ink\";\nimport TextInput from \"ink-text-input\";\nimport SelectInput from \"ink-select-input\";\nimport fs from \"fs-extra\";\nimport clipboardy from \"clipboardy\";\nconst log = console.log;\n\n/*\n  * Text Input: \n  1. Lingo Space ID: 000000\n  2. API Key: token\n\n  * Text Input: \n  1. How many kits? 2\n  2. Name of kit: Foobar\n  3. Name of kit: Foobar\n*/\n\n//TODO: Add a check if laf.json already exists to prevent overwriting\nexport class SearchQuery extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\terror: \"\",\n\t\t\terrorInfo: \"\",\n\t\t\tphase: \"\",\n\t\t\tenv: {\n\t\t\t\tspaceId: \"\",\n\t\t\t\tapiToken: \"\",\n\t\t\t\toutputLoc: \"\"\n\t\t\t},\n\t\t\tconfig: {\n\t\t\t\tquantity: \"\",\n\t\t\t\ttempKitName: \"\",\n\t\t\t\tkits: [],\n\t\t\t\toutputLoc: \"\"\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t ***********************************************\n\t\t *\tBinding\n\t\t ************************************************\n\t\t */\n\t\t// * SelectInput\n\t\tthis.handleIntro = this.handleIntro.bind(this);\n\t\tthis.handleEnvOutput = this.handleEnvOutput.bind(this);\n\t\t// * TextInput\n\t\tthis.handleEnvApiToken = this.handleEnvApiToken.bind(this);\n\t\tthis.handleEnvSpaceId = this.handleEnvSpaceId.bind(this);\n\t\tthis.handleConfigKitQuantity = this.handleConfigKitQuantity.bind(this);\n\t\tthis.handleConfigKitName = this.handleConfigKitName.bind(this);\n\t}\n\t/*\n\t ***********************************************\n\t *\tUpdate Phase\n\t ************************************************\n\t */\n\tupdatePhase(phase) {\n\t\tthis.setState({ phase });\n\t}\n\n\t/*\n\t ***********************************************\n\t *\tHandlers\n\t ************************************************\n\t */\n\n\thandleIntro({ value: phase } = selection) {\n\t\t//? Param syntax look weird? See here: https://codeburst.io/renaming-destructured-variables-in-es6-807549754972\n\t\tthis.setState({ phase });\n\t}\n\thandleEnvOutput(outputLoc) {\n\t\tthis.setNestedStateEnv({ outputLoc });\n\t}\n\thandleConfigOutput(outputLoc) {\n\t\tthis.setNestedStateConfig({ outputLoc });\n\t}\n\thandleEnvApiToken(apiToken) {\n\t\tthis.setNestedStateEnv({ apiToken });\n\t}\n\thandleEnvSpaceId(spaceId) {\n\t\tthis.setNestedStateEnv({ spaceId });\n\t}\n\thandleConfigKitQuantity(quantity) {\n\t\tthis.setNestedStateConfig({ quantity });\n\t}\n\thandleConfigKitName(name) {\n\t\tthis.setNestedStateConfig({ tempKitName: name });\n\t}\n\t//TODO: Fix the infinite loop for kit names\n\thandleConfigKitNameSubmit() {\n\t\tconst {\n\t\t\tconfig,\n\t\t\tconfig: { tempKitName: name }\n\t\t} = this.state;\n\t\tif (name.length > 0) {\n\t\t\tconst kits = [...Array.from(config.kits), { name }];\n\t\t\tthis.setState(({ config }) => {\n\t\t\t\treturn {\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\t...config,\n\t\t\t\t\t\tkits,\n\t\t\t\t\t\ttempKitName: \"\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t/*\n  ***********************************************\n  *\tsetNestedState Factories\n  ************************************************\n  ? since event object is not available, what's the best way to create a generic handler?\n  ? (ie. can't do e.target.name/value trick)\n  */\n\n\tsetNestedStateEnv(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ env }) => ({\n\t\t\tenv: {\n\t\t\t\t...env,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\tsetNestedStateConfig(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ config }) => ({\n\t\t\tconfig: {\n\t\t\t\t...config,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\t/*\n\t ***********************************************\n\t *\tEvent Lifecycle\n\t ************************************************\n\t */\n\t// componentDidUpdate() {\n\t// \tlog(`this.state: ${JSON.stringify(this.state, null, 2)}`);\n\t// }\n\tcomponentDidCatch(error, errorInfo) {\n\t\tthis.setState({ error, errorInfo });\n\t}\n\n\t/*\n\t ***********************************************\n\t * Components\n\t ************************************************\n\t */\n\tcIntro() {\n\t\t//TODO: Add exit as third option\n\t\tconst wydItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Generate empty boilerplate\",\n\t\t\t\tvalue: \"emptyBoilerplate\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Generate boilerplate interactively\",\n\t\t\t\tvalue: \"interactiveBoilerplate\"\n\t\t\t}\n\t\t];\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What would you like to do?</Text>\n\t\t\t\t<SelectInput items={wydItems} onSelect={this.handleIntro} />\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Refactor cEnd to \"cConfigEnd\"\n\tcEnd() {\n\t\tconst {\n\t\t\tspaceId,\n\t\t\tapiToken,\n\t\t\tconfig: { outputLoc, kits }\n\t\t} = this.state;\n\t\t//TODO: Abstract below into utility function for cEnd and cEnvDone's inline function\n\t\t//TODO: Add a check to see whether clipboard is already filled. If so, forego this option and write to laf.json\n\t\tlet config = JSON.stringify(\n\t\t\tthis.uGenerateLAFBoilerplate(\".laf.json\", Object.values(kits)),\n\t\t\tnull,\n\t\t\t2\n\t\t);\n\t\tif (outputLoc == \"dotLAF\") {\n\t\t\tfs.outputFile(`${process.cwd()}/.laf.json`, config, err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t} else if (outputLoc == \"clipboardConfig\") {\n\t\t\tclipboardy.writeSync(config);\n\t\t}\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>state: ${JSON.stringify(this.state, null, 2)}</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Validate config.quantity. Must be int\n\tcConfigKitQuantity() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>How many kits would you like to download assets from?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.quantity}\n\t\t\t\t\tonChange={this.handleConfigKitQuantity}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.updatePhase(\"configKitName\");\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"#\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcError(functionName, err) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Color blue>{functionName}(): </Color>\n\t\t\t\t<Color red>Error: {err}</Color>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEmptyBoilerplate(kitNames = [\"\"]) {\n\t\tlet rootDir = process.cwd();\n\t\tlet env = { name: \".env\", value: `SPACE_ID=''\\nAPI_TOKEN=''` };\n\t\tlet config = this.uGenerateLAFBoilerplate(\".laf.json\", kitNames);\n\t\t//TODO: Any reason I should not remove rootDir and replace it with cwd?\n\t\tfs.outputFile(`${rootDir}/${env.name}`, env.value, err => {\n\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t});\n\t\tfs.outputFile(\n\t\t\t`${rootDir}/${config.name}`,\n\t\t\tJSON.stringify(config.value, null, 2),\n\t\t\terr => {\n\t\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t\t}\n\t\t);\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>\n\t\t\t\t\t<Color blue>{config.name}</Color> & <Color blue>{env.name}</Color> has\n\t\t\t\t\tbeen generated.\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Add check after config is generated to output to clipboard or file\n\tcEnvSpaceId() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo Space ID?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.spaceId}\n\t\t\t\t\tonChange={this.handleEnvSpaceId}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envApiToken\")}\n\t\t\t\t\tplaceholder=\"000000\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEnvApiToken() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo API Token?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.apiToken}\n\t\t\t\t\tonChange={this.handleEnvApiToken}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envOutputMethod\")}\n\t\t\t\t\tplaceholder=\"token\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Abstract handleEnvOutput method\n\tcConfigOutputMethod() {\n\t\tlet configOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.laf.json\",\n\t\t\t\tvalue: \"dotLAF\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboardConfig\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(configOutputItems, \"config\", \"end\");\n\t}\n\tcEnvOutputMethod() {\n\t\tlet envOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.env\",\n\t\t\t\tvalue: \"dotEnv\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboard\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(\n\t\t\tenvOutputItems,\n\t\t\t\"env\",\n\t\t\t\"configKitQuantity\"\n\t\t);\n\t}\n\tcOutputMethodSelector(items, parent, nextPhase) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>{`Where would you like to output this data?\\n`}</Text>\n\t\t\t\t<SelectInput\n\t\t\t\t\titems={items}\n\t\t\t\t\tonSelect={({ value } = outputLoc) => {\n\t\t\t\t\t\tparent === \"env\"\n\t\t\t\t\t\t\t? this.handleEnvOutput(value)\n\t\t\t\t\t\t\t: this.handleConfigOutput(value);\n\t\t\t\t\t\tthis.updatePhase(nextPhase);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcConfigKitName() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's the name of your kit's config?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.tempKitName}\n\t\t\t\t\tonChange={this.handleConfigKitName}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.handleConfigKitNameSubmit();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t/*\n\t ***********************************************\n\t * Utilities\n\t ************************************************\n\t */\n\t//TODO: Create uGenerateEnvBoilerplate\n\t//TODO: Update emptyBoilerplate & interactiveBoilerplate with new Env generator\n\tuGenerateLAFBoilerplate(configName, kitNames) {\n\t\tlet kits = kitNames.map(kit => {\n\t\t\tlet name = kit.name;\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tsections: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\theaders: [\"\"]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t\treturn {\n\t\t\tname: configName,\n\t\t\tvalue: {\n\t\t\t\tkits\n\t\t\t}\n\t\t};\n\t}\n\t/*\n\t ***********************************************\n\t * Conditional Rendering (phase checkers)\n\t ************************************************\n\t */\n\trenderIntro() {\n\t\tif (this.state.phase == \"\") {\n\t\t\treturn this.cIntro();\n\t\t}\n\t\tif (this.state.phase == \"emptyBoilerplate\") {\n\t\t\treturn this.cEmptyBoilerplate();\n\t\t} else if (this.state.phase == \"interactiveBoilerplate\") {\n\t\t\treturn this.cEnvSpaceId();\n\t\t}\n\t}\n\trenderEnv() {\n\t\tconst {\n\t\t\tphase,\n\t\t\tenv: { outputLoc, spaceId, apiToken }\n\t\t} = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"envSpaceId\":\n\t\t\t\treturn this.cEnvSpaceId();\n\t\t\tcase \"envApiToken\":\n\t\t\t\treturn this.cEnvApiToken();\n\t\t\tcase \"envOutputMethod\":\n\t\t\t\treturn this.cEnvOutputMethod();\n\t\t\tcase \"envDone\":\n\t\t\t\tlet data = `SPACE_ID='${spaceId}'\\nAPI_TOKEN='${apiToken}'`;\n\t\t\t\tif (outputLoc == \"dotEnv\") {\n\t\t\t\t\tfs.outputFile(`${process.cwd()}/.env`, data, err => {\n\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t});\n\t\t\t\t} else if (outputLoc == \"clipboard\") {\n\t\t\t\t\tclipboardy.writeSync(data);\n\t\t\t\t}\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderEnv()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\trenderConfig() {\n\t\tconst { phase, config } = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"configKitQuantity\":\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tcase \"configKitName\":\n\t\t\t\tif (config.kits.length < config.quantity) {\n\t\t\t\t\treturn this.cConfigKitName();\n\t\t\t\t} else {\n\t\t\t\t\treturn this.cConfigOutputMethod();\n\t\t\t\t}\n\t\t\t// case \"configDone\":\n\t\t\t// \treturn this.cConfigOutputMethod();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderConfig()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\t//TODO: Remove unnecessary this statements\n\trender() {\n\t\tconst { phase } = this.state;\n\t\tif (phase.includes(\"Boilerplate\") || phase == \"\") {\n\t\t\treturn this.renderIntro();\n\t\t} else if (phase.includes(\"env\")) {\n\t\t\treturn this.renderEnv();\n\t\t} else if (phase.includes(\"config\")) {\n\t\t\treturn this.renderConfig();\n\t\t} else if (phase == \"end\") {\n\t\t\treturn this.cEnd();\n\t\t}\n\t}\n}\n\nexport function initInk() {\n\trender(<SearchQuery />);\n}\n","module.exports = require(\"react\");","module.exports = require(\"ink\");","module.exports = require(\"ink-text-input\");","module.exports = require(\"ink-select-input\");","module.exports = require(\"clipboardy\");","require(\"dotenv\").config();\nconst log = console.log;\nimport fs from \"fs-extra\";\nimport lingo from \"Lingojs\";\n\nimport config from \"./lingo.config\"; // For init tests\nimport { DateTime } from \"luxon\"; // For fs.outputFile\n\n/**\n * @param {int} spaceId :: Lingo Space ID (6 digits)\n * @param {int} apiToken :: Account root API\n */\nexport function getLingoSetupVariables(spaceId, apiToken) {\n  if (spaceId == null || apiToken == null) {\n    return [process.env.SPACE_ID, process.env.API_TOKEN];\n  } else {\n    return [spaceId, apiToken];\n  }\n}\n\n/**\n *\n * @param {string} kitName\n */\nexport async function getKitId(kitName = \"Capswan - Mobile App - Style Guide\") {\n  let kitUuid;\n  try {\n    let kits = await lingo.fetchKits();\n    kits.forEach(v => {\n      if (v.name === kitName) {\n        kitUuid = v.kit_uuid;\n      }\n    });\n    return kitUuid;\n  } catch (err) {\n    log(`getKitId() ${err}`);\n  }\n}\n\n/**\n * getRelevantAssetContainer\n * @param {*} kitId\n * @param {*} extractTarget\n * @param {*} kitVersion\n */\nexport async function getRelevantAssetContainer(\n  kitId,\n  extractTarget,\n  kitVersion = 0\n) {\n  //getRelevantAssetContainer\n  let outline = await lingo.fetchKitOutline(kitId, kitVersion);\n  const { sections } = extractTarget;\n  var assetContainer = Object.values(sections)\n    .map((extract, xIdx) => {\n      // log(`extract: ${JSON.stringify(extract, null, 2)}`);\n      return Object.values(outline)\n        .filter(origin => {\n          return origin.name === extract.name;\n        })\n        .map(matchingOrigin => {\n          const { uuid, headers } = matchingOrigin;\n          return Object.assign({}, { [uuid]: headers });\n        })\n        .map(slimmedOrigin => {\n          // log(`slimmedOrigin: ${JSON.stringify(slimmedOrigin, null, 2)}`);\n          let sectionUuid = Object.keys(slimmedOrigin);\n          if (extract.hasOwnProperty(\"headers\") && extract.headers.length > 0) {\n            return Object.values(extract.headers)\n              .map(extractHeaderName => {\n                // log(\n                // \t`extractHeaderName: ${JSON.stringify(\n                // \t\textractHeaderName,\n                // \t\tnull,\n                // \t\t2\n                // \t)}`\n                // );\n                return extractHeaderName;\n              })\n              .map(xHeader => {\n                let headers = Object.values(slimmedOrigin).flat();\n                // log(`headers: ${JSON.stringify(headers, null, 2)}`);\n                return headers.filter((oHeader, idx) => {\n                  // log(`oHeader: ${JSON.stringify(oHeader, null, 2)}`);\n                  const { name, uuid } = oHeader;\n                  // log(`nameee${idx}: ${name}`);\n                  // log(`uuuuid${idx}: ${uuid}`);\n                  // log(`xHeader${idx}: ${xHeader}`);\n                  // log(`insideeee headers`);\n                  if (name === xHeader) {\n                    // log(`insiiiiide nameXheader`);\n                    return Object.assign({}, { name, uuid });\n                  }\n                });\n              })\n              .map(matchedOriginHeaders => {\n                // log(\n                // \t`matchedOriginHeaders: ${JSON.stringify(\n                // \t\tmatchedOriginHeaders,\n                // \t\tnull,\n                // \t\t2\n                // \t)}`\n                // );\n                const { name, uuid } = matchedOriginHeaders[0];\n                // log(`name: ${name}`);\n                // log(`uuid: ${uuid}`);\n                return Object.assign({}, { [sectionUuid]: { name, uuid } });\n              })\n              .map(matchedUuidHeaderKV => {\n                // log(\n                // \t`matchedUuidHeaderKV: ${JSON.stringify(\n                // \t\tmatchedUuidHeaderKV,\n                // \t\tnull,\n                // \t\t2\n                // \t)}`\n                // );\n                return matchedUuidHeaderKV;\n              });\n          } else {\n            return Object.assign({}, { [sectionUuid]: {} });\n          }\n        })\n        .map(extracted => {\n          // log(`extracted: ${JSON.stringify(extracted, null, 2)}`);\n          return extracted;\n        });\n    })\n    .map(x => {\n      // log(`x: ${JSON.stringify(x, null, 2)}`);\n      return Object.values(x.flat());\n    });\n  return assetContainer.flat();\n  /* Output should look something like:\n\t\t\tcontainers: [\n\t\t\t\t{\n\t\t\t\t\t\"EE0669EA-0FA8-451D-B911-F7299602458F\": {}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"9533C6B8-599E-4709-9120-9DA8E10A2922\": {\n\t\t\t\t\t\t\"name\": \"Icons\",\n\t\t\t\t\t\t\"uuid\": \"32CACAE6-AD11-4FD6-B204-A16A17239D94\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"9533C6B8-599E-4709-9120-9DA8E10A2922\": {\n\t\t\t\t\t\t\"name\": \"Components\",\n\t\t\t\t\t\t\"uuid\": \"51CA5C83-10FA-4420-B768-A68306EF7656\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t*/\n}\n\n/**\n *\n * @param {string} assetName\n * @param {Array[string]} assetKeywords\n */\nfunction buildFileName(assetName, assetKeywords) {\n  //TODO: Make this extensible so people can pass their own options\n  if (assetKeywords.length >= 1) {\n    let tags = assetKeywords\n      .split(\",\")\n      .map(tag => {\n        return tag.trim();\n      })\n      .map(trimmed => {\n        return trimmed.replace(/ /g, \"_\");\n      });\n    let underscoredKeywords = tags.join(\"_\");\n    let underscoredAssetName = assetName.replace(/ /g, \"_\");\n    let newName = underscoredAssetName + \"_\" + underscoredKeywords;\n    return newName;\n  } else {\n    return assetName;\n  }\n}\n/**\n *\n * @param {array[{object:{string: {object}}}]} container\n * @param {integer} version\n * @param {integer} page\n * @param {integer} limit\n */\n\nexport async function getAssetUuids(\n  container,\n  version = 0,\n  page = 1,\n  limit = 2000\n) {\n  try {\n    var assetUuids = [];\n    for (let c of container) {\n      for (const [sectionUuid, header] of Object.entries(c)) {\n        let headerUuid = header.uuid;\n        if (headerUuid === null || headerUuid === undefined) {\n          // http://developer.lingoapp.com/lingojs/#sections\n          var section = await lingo.fetchSection(\n            sectionUuid,\n            version,\n            page,\n            limit\n          );\n          // fs.outputFileSync(\n          //   `./src/payloads/${DateTime.local().toISODate()}/section.json`,\n          //   JSON.stringify(section, null, 2)\n          // );\n          for (let item of section.items) {\n            // log(`item: ${item}`); // ?\n            if (item.asset_uuid !== null) {\n              if (item.asset.hasOwnProperty(\"keywords\")) {\n                var fileName = buildFileName(\n                  item.asset.name,\n                  item.asset.keywords\n                );\n              } else {\n                fileName = item.asset.name;\n              }\n              assetUuids.push(\n                Object.assign({}, { [item.asset_uuid]: fileName })\n              );\n              assetUuids;\n            }\n          }\n        } else {\n          // http://developer.lingoapp.com/lingojs/#heading-contents\n          var headerAssets = await lingo.fetchAssetsForHeading(\n            sectionUuid,\n            headerUuid\n          );\n          // fs.outputFileSync(\n          //   `./src/payloads/${DateTime.local().toISODate()}/headerAssets.json`,\n          //   JSON.stringify(headerAssets, null, 2)\n          // );\n\n          for (const [k, v] of Object.entries(headerAssets, null, 2)) {\n            if (v.asset_uuid !== null) {\n              // log(`v.asset.name: ${v.asset.name}`);\n              // log(`v.asset.keywords: ${v.asset.keywords}`);\n              if (v.asset.hasOwnProperty(\"keywords\")) {\n                var fileName = buildFileName(v.asset.name, v.asset.keywords);\n              } else {\n                fileName = v.asset.name;\n              }\n              // log(`header fileName: ${fileName}`);\n              assetUuids.push(Object.assign({}, { [v.asset_uuid]: fileName }));\n            }\n          }\n        }\n      }\n    }\n    return assetUuids;\n  } catch (err) {\n    log(`getAssetUuids() ${err}`);\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param {object} asset\n * @param {string} outFormat\n * @param {string} outDir\n */\nexport async function batchDownload(\n  asset,\n  outFormat = \"png\",\n  outDir = \"./downloads\"\n) {\n  try {\n    asset.forEach(async a => {\n      let uuid = Object.keys(a);\n      let fileName = Object.values(a);\n      var buffer;\n      try {\n        buffer = await lingo.downloadAsset(uuid, outFormat.toUpperCase());\n        fs.outputFileSync(\n          `${outDir}/${fileName}.${outFormat.toLowerCase()}`,\n          buffer,\n          \"binary\"\n        );\n      } catch (err) {\n        log(`Err: ${err}`);\n      }\n    });\n  } catch (err) {\n    log(`batchDownload(): ${err}`);\n  }\n}\n\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param {string} kitName\n * @param {object} extractTarget\n * @param {string} outputDirectory\n * @param {string} outputFormat\n * @param {string} spaceId\n * @param {string} apiToken\n * @param {int} kitVersion\n */\nexport async function init(\n  kitName = \"Test Me\",\n  extractTarget = null,\n  outputDirectory = \"./downloads\",\n  outputFormat = \"PNG\",\n  spaceId = null,\n  apiToken = null,\n  kitVersion = 0\n) {\n  if (extractTarget == null) {\n    throw Error(\"Extract Target is required\");\n  }\n  let lsConfig = getLingoSetupVariables(spaceId, apiToken); //Allow overwriting of env variables from init function\n  lingo.setup(lsConfig[0], lsConfig[1]); //[0] => spaceId, [1] => apiToken\n  try {\n    await batchDownload(\n      await getAssetUuids(\n        await getRelevantAssetContainer(\n          await getKitId(kitName),\n          extractTarget,\n          kitVersion\n        )\n      ),\n      outputFormat,\n      outputDirectory\n    );\n    return true;\n  } catch (err) {\n    log(`init() ${err}`);\n    return false;\n  }\n}\n\n/////////////////////////////////////\n// * Capswan\n/////////////////////////////////////\n\n// init(\n// \t\"Capswan - Mobile App - Style Guide\",\n// \tconfig.capswan.targetOne,\n// \t\"./downloads/capswan/One\",\n// \t\"PNG\"\n// );\n// init(\n// \t\"Capswan - Mobile App - Style Guide\",\n// \tconfig.capswan.targetTwo,\n// \t\"./downloads/capswan/Two\",\n// \t\"png\"\n// );\n\n/////////////////////////////////////\n// * TestMe\n/////////////////////////////////////\n// ? The reason this was failing before was because \"Illustrated\" was capitalized in config, but \"illustrated\" was lowercase in Lingo\n// init(\"Test Me\", config.testMe.targetOne, \"./downloads/testMe/One\", \"PNG\");\n// init(\"Test Me\", config.testMe.targetTwo, \"./downloads/testMe/Two\", \"png\");\n","module.exports = require(\"Lingojs\");","export default {\n\ttestMe: {\n\t\ttargetOne: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ttargetTwo: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\",\n\t\t\t\t\theaders: [\"Lined\"]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\tcapswan: {\n\t\ttargetOne: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Icons\",\n\t\t\t\t\theaders: [\"Icons\", \"Components\"]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ttargetTwo: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Icons\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n};\n\n/* Sample output from capswanExampleExtractTargetOne =>\n    {\n      \"sections\": [\n        {\n          \"name\": \"Illustrations\",\n          \"uuid\": \"EE0669EA-0FA8-451D-B911-F7299602458F\",\n          \"headers\": []\n        },\n        {\n          \"name\": \"Icons\",\n          \"uuid\": \"9533C6B8-599E-4709-9120-9DA8E10A2922\",\n          \"headers\": [\n            \"32CACAE6-AD11-4FD6-B204-A16A17239D94\",\n            \"51CA5C83-10FA-4420-B768-A68306EF7656\"\n          ]\n        }\n      ]\n    }\n    */\n","module.exports = require(\"luxon\");","module.exports = require(\"dotenv\");"],"sourceRoot":""}