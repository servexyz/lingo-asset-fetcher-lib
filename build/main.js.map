{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs-extra\"","webpack:///external \"@babel/polyfill\"","webpack:///./src/index.js","webpack:///./src/generator.js","webpack:///external \"react\"","webpack:///external \"ink\"","webpack:///external \"ink-text-input\"","webpack:///external \"ink-select-input\"","webpack:///external \"clipboardy\"","webpack:///./src/lingo.js","webpack:///external \"Lingojs\"","webpack:///./src/lingo.config.js","webpack:///external \"dotenv\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","_generator","_lingo","_ink","render","_react","createElement","SearchQuery","_interopRequireDefault","_inkTextInput","_inkSelectInput","_fsExtra","_clipboardy","console","log","_this","_classCallCheck","this","_getPrototypeOf","state","error","errorInfo","phase","env","spaceId","apiToken","outputLoc","config","quantity","tempKitName","kits","handleIntro","_assertThisInitialized","handleEnvOutput","handleEnvApiToken","handleEnvSpaceId","handleConfigKitQuantity","handleConfigKitName","React","Component","setState","arguments","length","undefined","selection","setNestedStateEnv","setNestedStateConfig","_this$state","concat","_toConsumableArray","Array","from","_ref2","_objectSpread","kv","keys","_ref3","_defineProperty","_ref4","Box","Text","items","label","onSelect","_this$state2","_this$state2$config","JSON","stringify","uGenerateLAFBoilerplate","values","fs","outputFile","process","cwd","err","clipboardy","writeSync","_this2","onChange","onSubmit","updatePhase","placeholder","functionName","Color","blue","red","_this3","kitNames","rootDir","cError","_this4","_this5","cOutputMethodSelector","parent","nextPhase","_this6","handleConfigOutput","_this7","handleConfigKitNameSubmit","configName","map","kit","sections","headers","cIntro","cEmptyBoilerplate","cEnvSpaceId","_this$state3","_this$state3$env","cEnvApiToken","cEnvOutputMethod","data","cConfigKitQuantity","_this$state4","cConfigKitName","cConfigOutputMethod","includes","renderIntro","renderEnv","renderConfig","cEnd","_Lingojs","getLingoSetupVariables","SPACE_ID","API_TOKEN","getKitId","_callee","kitName","kitUuid","_args","regeneratorRuntime","wrap","_context","prev","next","lingo","fetchKits","sent","forEach","v","kit_uuid","abrupt","t0","stop","getRelevantAssetContainers","_callee2","kitId","extractTarget","kitVersion","uuids","outline","_args2","_context2","fetchKitOutline","targetSec","headerUuids","originSec","tsHeaderName","osHeader","uuid","push","_callee3","assetContainer","_args3","_context3","extract","xIdx","filter","origin","matchingOrigin","assign","slimmedOrigin","sectionUuid","extractHeaderName","xHeader","flat","oHeader","idx","matchedOriginHeaders","_matchedOriginHeaders","matchedUuidHeaderKV","extracted","x","buildFileName","assetName","assetKeywords","underscoredKeywords","split","tag","trim","trimmed","replace","join","_callee4","container","_args4","_context4","cSection","getAssetUuids","_callee5","singletonUuids","version","page","limit","assetUuids","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","headerUuid","section","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","item","fileName","headerAssets","_i","_Object$entries","_Object$entries$_i","_args5","_context5","iterator","done","fetchSection","asset_uuid","asset","keywords","finish","fetchAssetsForHeading","entries","_slicedToArray","t1","t2","batchDownload","_callee7","outFormat","outDir","_args7","_context7","_ref","_asyncToGenerator","mark","_callee6","a","buffer","_context6","downloadAsset","toUpperCase","toLowerCase","_x8","apply","_callee8","outputDirectory","outputFormat","lsConfig","_args8","_context8","Error","setup","formatAssetContainers","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","testMe","targetOne","targetTwo","capswan"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"fs-extra\");","module.exports = require(\"@babel/polyfill\");","export { SearchQuery, initInk } from \"./generator\";\nexport {\n\tgetRelevantAssetContainers,\n\tgetRelevantAssetContainersTwo,\n\tgetKitId,\n\tgetLingoSetupVariables,\n\tgetAssetUuids,\n\tformatAssetContainers,\n\tbatchDownload,\n\tinit\n} from \"./lingo\";\n","import React from \"react\";\nimport { render, Box, Text, Color } from \"ink\";\nimport TextInput from \"ink-text-input\";\nimport SelectInput from \"ink-select-input\";\nimport fs from \"fs-extra\";\nimport clipboardy from \"clipboardy\";\nconst log = console.log;\n\n/*\n  * Text Input: \n  1. Lingo Space ID: 000000\n  2. API Key: token\n\n  * Text Input: \n  1. How many kits? 2\n  2. Name of kit: Foobar\n  3. Name of kit: Foobar\n*/\n\n//TODO: Add a check if laf.json already exists to prevent overwriting\nexport class SearchQuery extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\terror: \"\",\n\t\t\terrorInfo: \"\",\n\t\t\tphase: \"\",\n\t\t\tenv: {\n\t\t\t\tspaceId: \"\",\n\t\t\t\tapiToken: \"\",\n\t\t\t\toutputLoc: \"\"\n\t\t\t},\n\t\t\tconfig: {\n\t\t\t\tquantity: \"\",\n\t\t\t\ttempKitName: \"\",\n\t\t\t\tkits: [],\n\t\t\t\toutputLoc: \"\"\n\t\t\t}\n\t\t};\n\n\t\t/*\n\t\t ***********************************************\n\t\t *\tBinding\n\t\t ************************************************\n\t\t */\n\t\t// * SelectInput\n\t\tthis.handleIntro = this.handleIntro.bind(this);\n\t\tthis.handleEnvOutput = this.handleEnvOutput.bind(this);\n\t\t// * TextInput\n\t\tthis.handleEnvApiToken = this.handleEnvApiToken.bind(this);\n\t\tthis.handleEnvSpaceId = this.handleEnvSpaceId.bind(this);\n\t\tthis.handleConfigKitQuantity = this.handleConfigKitQuantity.bind(this);\n\t\tthis.handleConfigKitName = this.handleConfigKitName.bind(this);\n\t}\n\t/*\n\t ***********************************************\n\t *\tUpdate Phase\n\t ************************************************\n\t */\n\tupdatePhase(phase) {\n\t\tthis.setState({ phase });\n\t}\n\n\t/*\n\t ***********************************************\n\t *\tHandlers\n\t ************************************************\n\t */\n\n\thandleIntro({ value: phase } = selection) {\n\t\t//? Param syntax look weird? See here: https://codeburst.io/renaming-destructured-variables-in-es6-807549754972\n\t\tthis.setState({ phase });\n\t}\n\thandleEnvOutput(outputLoc) {\n\t\tthis.setNestedStateEnv({ outputLoc });\n\t}\n\thandleConfigOutput(outputLoc) {\n\t\tthis.setNestedStateConfig({ outputLoc });\n\t}\n\thandleEnvApiToken(apiToken) {\n\t\tthis.setNestedStateEnv({ apiToken });\n\t}\n\thandleEnvSpaceId(spaceId) {\n\t\tthis.setNestedStateEnv({ spaceId });\n\t}\n\thandleConfigKitQuantity(quantity) {\n\t\tthis.setNestedStateConfig({ quantity });\n\t}\n\thandleConfigKitName(name) {\n\t\tthis.setNestedStateConfig({ tempKitName: name });\n\t}\n\t//TODO: Fix the infinite loop for kit names\n\thandleConfigKitNameSubmit() {\n\t\tconst {\n\t\t\tconfig,\n\t\t\tconfig: { tempKitName: name }\n\t\t} = this.state;\n\t\tif (name.length > 0) {\n\t\t\tconst kits = [...Array.from(config.kits), { name }];\n\t\t\tthis.setState(({ config }) => {\n\t\t\t\treturn {\n\t\t\t\t\tconfig: {\n\t\t\t\t\t\t...config,\n\t\t\t\t\t\tkits,\n\t\t\t\t\t\ttempKitName: \"\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\t/*\n\t***********************************************\n\t*\tsetNestedState Factories\n\t************************************************\n\t? since event object is not available, what's the best way to create a generic handler?\n\t? (ie. can't do e.target.name/value trick)\n\t*/\n\n\tsetNestedStateEnv(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ env }) => ({\n\t\t\tenv: {\n\t\t\t\t...env,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\tsetNestedStateConfig(kv) {\n\t\tlet key = Object.keys(kv);\n\t\tthis.setState(({ config }) => ({\n\t\t\tconfig: {\n\t\t\t\t...config,\n\t\t\t\t[key]: kv[key]\n\t\t\t}\n\t\t}));\n\t}\n\t/*\n\t ***********************************************\n\t *\tEvent Lifecycle\n\t ************************************************\n\t */\n\t// componentDidUpdate() {\n\t// \tlog(`this.state: ${JSON.stringify(this.state, null, 2)}`);\n\t// }\n\tcomponentDidCatch(error, errorInfo) {\n\t\tthis.setState({ error, errorInfo });\n\t}\n\n\t/*\n\t ***********************************************\n\t * Components\n\t ************************************************\n\t */\n\tcIntro() {\n\t\t//TODO: Add exit as third option\n\t\tconst wydItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Generate empty boilerplate\",\n\t\t\t\tvalue: \"emptyBoilerplate\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Generate boilerplate interactively\",\n\t\t\t\tvalue: \"interactiveBoilerplate\"\n\t\t\t}\n\t\t];\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What would you like to do?</Text>\n\t\t\t\t<SelectInput items={wydItems} onSelect={this.handleIntro} />\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Refactor cEnd to \"cConfigEnd\"\n\tcEnd() {\n\t\tconst {\n\t\t\tspaceId,\n\t\t\tapiToken,\n\t\t\tconfig: { outputLoc, kits }\n\t\t} = this.state;\n\t\t//TODO: Abstract below into utility function for cEnd and cEnvDone's inline function\n\t\t//TODO: Add a check to see whether clipboard is already filled. If so, forego this option and write to laf.json\n\t\tlet config = JSON.stringify(\n\t\t\tthis.uGenerateLAFBoilerplate(\".laf.json\", Object.values(kits)),\n\t\t\tnull,\n\t\t\t2\n\t\t);\n\t\tif (outputLoc == \"dotLAF\") {\n\t\t\tfs.outputFile(`${process.cwd()}/.laf.json`, config, err => {\n\t\t\t\tif (err) throw err;\n\t\t\t});\n\t\t} else if (outputLoc == \"clipboardConfig\") {\n\t\t\tclipboardy.writeSync(config);\n\t\t}\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>state: ${JSON.stringify(this.state, null, 2)}</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Validate config.quantity. Must be int\n\tcConfigKitQuantity() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>How many kits would you like to download assets from?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.quantity}\n\t\t\t\t\tonChange={this.handleConfigKitQuantity}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.updatePhase(\"configKitName\");\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"#\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcError(functionName, err) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Color blue>{functionName}(): </Color>\n\t\t\t\t<Color red>Error: {err}</Color>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEmptyBoilerplate(kitNames = [\"\"]) {\n\t\tlet rootDir = process.cwd();\n\t\tlet env = { name: \".env\", value: `SPACE_ID=''\\nAPI_TOKEN=''` };\n\t\tlet config = this.uGenerateLAFBoilerplate(\".laf.json\", kitNames);\n\t\t//TODO: Any reason I should not remove rootDir and replace it with cwd?\n\t\tfs.outputFile(`${rootDir}/${env.name}`, env.value, err => {\n\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t});\n\t\tfs.outputFile(\n\t\t\t`${rootDir}/${config.name}`,\n\t\t\tJSON.stringify(config.value, null, 2),\n\t\t\terr => {\n\t\t\t\tif (err) return this.cError(\"cEmptyBoilerplate\", err);\n\t\t\t}\n\t\t);\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>\n\t\t\t\t\t<Color blue>{config.name}</Color> & <Color blue>{env.name}</Color> has\n\t\t\t\t\tbeen generated.\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Add check after config is generated to output to clipboard or file\n\tcEnvSpaceId() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo Space ID?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.spaceId}\n\t\t\t\t\tonChange={this.handleEnvSpaceId}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envApiToken\")}\n\t\t\t\t\tplaceholder=\"000000\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcEnvApiToken() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's your Lingo API Token?</Text>&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.env.apiToken}\n\t\t\t\t\tonChange={this.handleEnvApiToken}\n\t\t\t\t\tonSubmit={() => this.updatePhase(\"envOutputMethod\")}\n\t\t\t\t\tplaceholder=\"token\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t//TODO: Abstract handleEnvOutput method\n\tcConfigOutputMethod() {\n\t\tlet configOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.laf.json\",\n\t\t\t\tvalue: \"dotLAF\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboardConfig\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(configOutputItems, \"config\", \"end\");\n\t}\n\tcEnvOutputMethod() {\n\t\tlet envOutputItems = [\n\t\t\t{\n\t\t\t\tlabel: \"Write to ./.env\",\n\t\t\t\tvalue: \"dotEnv\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"Write to clipboard\",\n\t\t\t\tvalue: \"clipboard\"\n\t\t\t}\n\t\t];\n\t\treturn this.cOutputMethodSelector(\n\t\t\tenvOutputItems,\n\t\t\t\"env\",\n\t\t\t\"configKitQuantity\"\n\t\t);\n\t}\n\tcOutputMethodSelector(items, parent, nextPhase) {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>{`Where would you like to output this data?\\n`}</Text>\n\t\t\t\t<SelectInput\n\t\t\t\t\titems={items}\n\t\t\t\t\tonSelect={({ value } = outputLoc) => {\n\t\t\t\t\t\tparent === \"env\"\n\t\t\t\t\t\t\t? this.handleEnvOutput(value)\n\t\t\t\t\t\t\t: this.handleConfigOutput(value);\n\t\t\t\t\t\tthis.updatePhase(nextPhase);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\tcConfigKitName() {\n\t\treturn (\n\t\t\t<Box>\n\t\t\t\t<Text>What's the name of your kit's config?</Text>\n\t\t\t\t&nbsp;\n\t\t\t\t<TextInput\n\t\t\t\t\tvalue={this.state.config.tempKitName}\n\t\t\t\t\tonChange={this.handleConfigKitName}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tthis.handleConfigKitNameSubmit();\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t);\n\t}\n\t/*\n\t ***********************************************\n\t * Utilities\n\t ************************************************\n\t */\n\t//TODO: Create uGenerateEnvBoilerplate\n\t//TODO: Update emptyBoilerplate & interactiveBoilerplate with new Env generator\n\tuGenerateLAFBoilerplate(configName, kitNames) {\n\t\tlet kits = kitNames.map(kit => {\n\t\t\tlet name = kit.name;\n\t\t\treturn {\n\t\t\t\tname,\n\t\t\t\tsections: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\theaders: [\"\"]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t});\n\t\treturn {\n\t\t\tname: configName,\n\t\t\tvalue: {\n\t\t\t\tkits\n\t\t\t}\n\t\t};\n\t}\n\t/*\n\t ***********************************************\n\t * Conditional Rendering (phase checkers)\n\t ************************************************\n\t */\n\trenderIntro() {\n\t\tif (this.state.phase == \"\") {\n\t\t\treturn this.cIntro();\n\t\t}\n\t\tif (this.state.phase == \"emptyBoilerplate\") {\n\t\t\treturn this.cEmptyBoilerplate();\n\t\t} else if (this.state.phase == \"interactiveBoilerplate\") {\n\t\t\treturn this.cEnvSpaceId();\n\t\t}\n\t}\n\trenderEnv() {\n\t\tconst {\n\t\t\tphase,\n\t\t\tenv: { outputLoc, spaceId, apiToken }\n\t\t} = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"envSpaceId\":\n\t\t\t\treturn this.cEnvSpaceId();\n\t\t\tcase \"envApiToken\":\n\t\t\t\treturn this.cEnvApiToken();\n\t\t\tcase \"envOutputMethod\":\n\t\t\t\treturn this.cEnvOutputMethod();\n\t\t\tcase \"envDone\":\n\t\t\t\tlet data = `SPACE_ID='${spaceId}'\\nAPI_TOKEN='${apiToken}'`;\n\t\t\t\tif (outputLoc == \"dotEnv\") {\n\t\t\t\t\tfs.outputFile(`${process.cwd()}/.env`, data, err => {\n\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t});\n\t\t\t\t} else if (outputLoc == \"clipboard\") {\n\t\t\t\t\tclipboardy.writeSync(data);\n\t\t\t\t}\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderEnv()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\trenderConfig() {\n\t\tconst { phase, config } = this.state;\n\t\tswitch (phase) {\n\t\t\tcase \"configKitQuantity\":\n\t\t\t\treturn this.cConfigKitQuantity();\n\t\t\tcase \"configKitName\":\n\t\t\t\tif (config.kits.length < config.quantity) {\n\t\t\t\t\treturn this.cConfigKitName();\n\t\t\t\t} else {\n\t\t\t\t\treturn this.cConfigOutputMethod();\n\t\t\t\t}\n\t\t\t// case \"configDone\":\n\t\t\t// \treturn this.cConfigOutputMethod();\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\tNothing found in <Color blue>renderConfig()</Color>\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</Box>\n\t\t\t\t);\n\t\t}\n\t}\n\t//TODO: Remove unnecessary this statements\n\trender() {\n\t\tconst { phase } = this.state;\n\t\tif (phase.includes(\"Boilerplate\") || phase == \"\") {\n\t\t\treturn this.renderIntro();\n\t\t} else if (phase.includes(\"env\")) {\n\t\t\treturn this.renderEnv();\n\t\t} else if (phase.includes(\"config\")) {\n\t\t\treturn this.renderConfig();\n\t\t} else if (phase == \"end\") {\n\t\t\treturn this.cEnd();\n\t\t}\n\t}\n}\n\nexport function initInk() {\n\trender(<SearchQuery />);\n}\n","module.exports = require(\"react\");","module.exports = require(\"ink\");","module.exports = require(\"ink-text-input\");","module.exports = require(\"ink-select-input\");","module.exports = require(\"clipboardy\");","require(\"dotenv\").config();\nconst log = console.log;\nimport fs from \"fs-extra\";\nimport lingo from \"Lingojs\";\nimport config from \"./lingo.config\";\n\n/**\n * @param {int} spaceId :: Lingo Space ID (6 digits)\n * @param {int} apiToken :: Account root API\n */\nexport function getLingoSetupVariables(spaceId, apiToken) {\n\tif (spaceId == null || apiToken == null) {\n\t\treturn [process.env.SPACE_ID, process.env.API_TOKEN];\n\t} else {\n\t\treturn [spaceId, apiToken];\n\t}\n}\n\n/**\n *\n * @param {string} kitName\n */\nexport async function getKitId(kitName = \"Capswan - Mobile App - Style Guide\") {\n\tlet kitUuid;\n\ttry {\n\t\tlet kits = await lingo.fetchKits();\n\t\tkits.forEach(v => {\n\t\t\tif (v.name === kitName) {\n\t\t\t\tkitUuid = v.kit_uuid;\n\t\t\t}\n\t\t});\n\t\treturn kitUuid;\n\t} catch (err) {\n\t\tlog(`getKitId() ${err}`);\n\t}\n}\n//TODO: Experiment with functional style to try to solve scope issue\nexport async function getRelevantAssetContainers(\n\tkitId,\n\textractTarget,\n\tkitVersion = 0\n) {\n\tconst uuids = { sections: [] };\n\ttry {\n\t\t//? Might be failing because it's only checking headers and not sections\n\t\t// let headerUuids = [];\n\t\tlet outline = await lingo.fetchKitOutline(kitId, kitVersion);\n\t\t// log(`gRAC outline: ${JSON.stringify(outline, null, 2)}`);\n\t\textractTarget.sections.forEach(targetSec => {\n\t\t\t// log(`gRAC targetSec: ${JSON.stringify(targetSec, null, 2)}`);\n\t\t\tlet headerUuids = [];\n\t\t\tObject.values(outline).forEach(originSec => {\n\t\t\t\t// log(`gRAC originSec: ${JSON.stringify(originSec, null, 2)}`);\n\t\t\t\t//TODO: Add a test for sections with duplicate names\n\t\t\t\t// let headerUuids = [];\n\t\t\t\tif (targetSec.name === originSec.name) {\n\t\t\t\t\tif (targetSec.hasOwnProperty(\"headers\")) {\n\t\t\t\t\t\tlog(`targetSec has headers property`);\n\t\t\t\t\t\t//TODO: Add a test for headers with duplicate names\n\t\t\t\t\t\ttargetSec.headers.forEach(tsHeaderName => {\n\t\t\t\t\t\t\toriginSec.headers.forEach(osHeader => {\n\t\t\t\t\t\t\t\tif (tsHeaderName === osHeader.name) {\n\t\t\t\t\t\t\t\t\tlog(`this should be added: ${osHeader.uuid}`);\n\t\t\t\t\t\t\t\t\theaderUuids.push(osHeader.uuid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tuuids.sections.push({\n\t\t\t\t\t\tname: originSec.name,\n\t\t\t\t\t\tuuid: originSec.uuid,\n\t\t\t\t\t\theaders: headerUuids\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tlog(`uuids 1: ${JSON.stringify(uuids, null, 2)}`);\n\t} catch (err) {\n\t\tlog(`getRelevantAssetContainers() ${err}`);\n\t}\n\tlog(`uuids 2: ${JSON.stringify(uuids, null, 2)}`);\n\treturn uuids;\n}\n\n/**\n * getRelevantAssetContainer\n *  TODO: Rename getRAC to getRelevantAssetContainer after old is removed\n * @param {*} kitId\n * @param {*} extractTarget\n * @param {*} kitVersion\n */\nexport async function getRAC(kitId, extractTarget, kitVersion = 0) {\n\t//getRelevantAssetContainer\n\t//TODO: ATTN someone brave: refactor this.\n\tlet outline = await lingo.fetchKitOutline(kitId, kitVersion);\n\tconst { sections } = extractTarget;\n\tvar assetContainer = Object.values(sections)\n\t\t.map((extract, xIdx) => {\n\t\t\t// log(`extract: ${JSON.stringify(extract, null, 2)}`);\n\t\t\treturn Object.values(outline)\n\t\t\t\t.filter(origin => {\n\t\t\t\t\treturn origin.name === extract.name;\n\t\t\t\t})\n\t\t\t\t.map(matchingOrigin => {\n\t\t\t\t\tconst { uuid, headers } = matchingOrigin;\n\t\t\t\t\treturn Object.assign({}, { [uuid]: headers });\n\t\t\t\t})\n\t\t\t\t.map(slimmedOrigin => {\n\t\t\t\t\t// log(`slimmedOrigin: ${JSON.stringify(slimmedOrigin, null, 2)}`);\n\t\t\t\t\tlet sectionUuid = Object.keys(slimmedOrigin);\n\t\t\t\t\tif (extract.hasOwnProperty(\"headers\") && extract.headers.length > 0) {\n\t\t\t\t\t\treturn Object.values(extract.headers)\n\t\t\t\t\t\t\t.map(extractHeaderName => {\n\t\t\t\t\t\t\t\t// log(\n\t\t\t\t\t\t\t\t// \t`extractHeaderName: ${JSON.stringify(\n\t\t\t\t\t\t\t\t// \t\textractHeaderName,\n\t\t\t\t\t\t\t\t// \t\tnull,\n\t\t\t\t\t\t\t\t// \t\t2\n\t\t\t\t\t\t\t\t// \t)}`\n\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\treturn extractHeaderName;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(xHeader => {\n\t\t\t\t\t\t\t\tlet headers = Object.values(slimmedOrigin).flat();\n\t\t\t\t\t\t\t\t// log(`headers: ${JSON.stringify(headers, null, 2)}`);\n\t\t\t\t\t\t\t\treturn headers.filter((oHeader, idx) => {\n\t\t\t\t\t\t\t\t\t// log(`oHeader: ${JSON.stringify(oHeader, null, 2)}`);\n\t\t\t\t\t\t\t\t\tconst { name, uuid } = oHeader;\n\t\t\t\t\t\t\t\t\t// log(`nameee${idx}: ${name}`);\n\t\t\t\t\t\t\t\t\t// log(`uuuuid${idx}: ${uuid}`);\n\t\t\t\t\t\t\t\t\t// log(`xHeader${idx}: ${xHeader}`);\n\t\t\t\t\t\t\t\t\t// log(`insideeee headers`);\n\t\t\t\t\t\t\t\t\tif (name === xHeader) {\n\t\t\t\t\t\t\t\t\t\t// log(`insiiiiide nameXheader`);\n\t\t\t\t\t\t\t\t\t\treturn Object.assign({}, { name, uuid });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(matchedOriginHeaders => {\n\t\t\t\t\t\t\t\t// log(\n\t\t\t\t\t\t\t\t// \t`matchedOriginHeaders: ${JSON.stringify(\n\t\t\t\t\t\t\t\t// \t\tmatchedOriginHeaders,\n\t\t\t\t\t\t\t\t// \t\tnull,\n\t\t\t\t\t\t\t\t// \t\t2\n\t\t\t\t\t\t\t\t// \t)}`\n\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\tconst { name, uuid } = matchedOriginHeaders[0];\n\t\t\t\t\t\t\t\t// log(`name: ${name}`);\n\t\t\t\t\t\t\t\t// log(`uuid: ${uuid}`);\n\t\t\t\t\t\t\t\treturn Object.assign({}, { [sectionUuid]: { name, uuid } });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.map(matchedUuidHeaderKV => {\n\t\t\t\t\t\t\t\t// log(\n\t\t\t\t\t\t\t\t// \t`matchedUuidHeaderKV: ${JSON.stringify(\n\t\t\t\t\t\t\t\t// \t\tmatchedUuidHeaderKV,\n\t\t\t\t\t\t\t\t// \t\tnull,\n\t\t\t\t\t\t\t\t// \t\t2\n\t\t\t\t\t\t\t\t// \t)}`\n\t\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t\t\treturn matchedUuidHeaderKV;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn Object.assign({}, { [sectionUuid]: {} });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.map(extracted => {\n\t\t\t\t\t// log(`extracted: ${JSON.stringify(extracted, null, 2)}`);\n\t\t\t\t\treturn extracted;\n\t\t\t\t});\n\t\t})\n\t\t.map(x => {\n\t\t\t// log(`x: ${JSON.stringify(x, null, 2)}`);\n\t\t\treturn Object.values(x.flat());\n\t\t});\n\t/* Output should look something like:\n\t\tcontainers: [\n\t\t\t{\n\t\t\t\t\"EE0669EA-0FA8-451D-B911-F7299602458F\": {}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"9533C6B8-599E-4709-9120-9DA8E10A2922\": {\n\t\t\t\t\t\"name\": \"Icons\",\n\t\t\t\t\t\"uuid\": \"32CACAE6-AD11-4FD6-B204-A16A17239D94\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"9533C6B8-599E-4709-9120-9DA8E10A2922\": {\n\t\t\t\t\t\"name\": \"Components\",\n\t\t\t\t\t\"uuid\": \"51CA5C83-10FA-4420-B768-A68306EF7656\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t*/\n\treturn assetContainer.flat();\n}\n\n// export function formatAssetContainers({ sections } = assetContainers) {\n// \tlet singletonUuids = [];\n// \tsections.forEach((section, idx) => {\n// \t\tif (section.hasOwnProperty(\"headers\") && section.headers.length === 0) {\n// \t\t\tsingletonUuids.push(Object.assign({}, { [section.uuid]: null }));\n// \t\t} else {\n// \t\t\tsection.headers.forEach(header => {\n// \t\t\t\tsingletonUuids.push(Object.assign({}, { [section.uuid]: header }));\n// \t\t\t});\n// \t\t}\n// \t});\n// \treturn singletonUuids;\n// }\n\n/**\n *\n * @param {string} assetName\n * @param {Array[string]} assetKeywords\n */\nfunction buildFileName(assetName, assetKeywords) {\n\t//TODO: Make this extensible so people can pass their own options\n\tif (assetKeywords.length >= 1) {\n\t\tlet tags = assetKeywords\n\t\t\t.split(\",\")\n\t\t\t.map(tag => {\n\t\t\t\treturn tag.trim();\n\t\t\t})\n\t\t\t.map(trimmed => {\n\t\t\t\treturn trimmed.replace(/ /g, \"_\");\n\t\t\t});\n\t\tlet underscoredKeywords = tags.join(\"_\");\n\t\tlet underscoredAssetName = assetName.replace(/ /g, \"_\");\n\t\tlet newName = underscoredAssetName + \"_\" + underscoredKeywords;\n\t\treturn newName;\n\t} else {\n\t\treturn assetName;\n\t}\n}\n/**\n *\n * @param {object{<string>:<string>}} singletonUuids\n * @param {integer} version\n * @param {integer} page\n * @param {integer} limit\n */\n\nexport async function getAU(container, version = 0, page = 1, limit = 2000) {\n\treturn container.map(cSection => {\n\t\tlog(`cs0: ${cSection[0]}`);\n\t\treturn cSection;\n\t});\n}\nexport async function getAssetUuids(\n\tsingletonUuids,\n\tversion = 0,\n\tpage = 1,\n\tlimit = 2000\n) {\n\t//TODO: Extract name from getAssetUuid (to name the file)\n\tvar assetUuids = [];\n\ttry {\n\t\tfor (let s of singletonUuids) {\n\t\t\tlet sectionUuid = Object.keys(s)[0];\n\t\t\tlet headerUuid = Object.values(s)[0];\n\t\t\tif (headerUuid === null) {\n\t\t\t\t// http://developer.lingoapp.com/lingojs/#sections\n\t\t\t\tvar section = await lingo.fetchSection(\n\t\t\t\t\tsectionUuid,\n\t\t\t\t\tversion,\n\t\t\t\t\tpage,\n\t\t\t\t\tlimit\n\t\t\t\t);\n\t\t\t\t// fs.writeFileSync(\n\t\t\t\t// \t\"./src/samplePayloads/section.json\",\n\t\t\t\t// \tJSON.stringify(section, null, 2)\n\t\t\t\t// );\n\t\t\t\tfor (let item of section.items) {\n\t\t\t\t\tif (item.asset_uuid !== null) {\n\t\t\t\t\t\tif (item.asset.hasOwnProperty(\"keywords\")) {\n\t\t\t\t\t\t\tvar fileName = buildFileName(\n\t\t\t\t\t\t\t\titem.asset.name,\n\t\t\t\t\t\t\t\titem.asset.keywords\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfileName = item.asset.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tassetUuids.push(Object.assign({}, { [item.asset_uuid]: fileName }));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// http://developer.lingoapp.com/lingojs/#heading-contents\n\t\t\t\t//TODO: Check if possible to add version / page / limit\n\t\t\t\tvar headerAssets = await lingo.fetchAssetsForHeading(\n\t\t\t\t\tsectionUuid,\n\t\t\t\t\theaderUuid\n\t\t\t\t);\n\t\t\t\t// fs.writeFileSync(\n\t\t\t\t// \t\"./src/samplePayloads/headerAssets.json\",\n\t\t\t\t// \tJSON.stringify(headerAssets, null, 2)\n\t\t\t\t// );\n\n\t\t\t\tfor (const [k, v] of Object.entries(headerAssets, null, 2)) {\n\t\t\t\t\tif (v.asset_uuid !== null) {\n\t\t\t\t\t\t// log(`v.asset.name: ${v.asset.name}`);\n\t\t\t\t\t\t// log(`v.asset.keywords: ${v.asset.keywords}`);\n\t\t\t\t\t\tif (v.asset.hasOwnProperty(\"keywords\")) {\n\t\t\t\t\t\t\tvar fileName = buildFileName(v.asset.name, v.asset.keywords);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfileName = v.asset.name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// log(`header fileName: ${fileName}`);\n\t\t\t\t\t\tassetUuids.push(Object.assign({}, { [v.asset_uuid]: fileName }));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn assetUuids;\n\t} catch (err) {\n\t\tlog(`getAssetUuids() ${err}`);\n\t}\n}\n\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n * @param {object} asset\n * @param {string} outFormat\n * @param {string} outDir\n */\nexport async function batchDownload(\n\tasset,\n\toutFormat = \"png\",\n\toutDir = \"./downloads\"\n) {\n\ttry {\n\t\tasset.forEach(async a => {\n\t\t\tlet uuid = Object.keys(a);\n\t\t\tlet fileName = Object.values(a);\n\t\t\tvar buffer;\n\t\t\ttry {\n\t\t\t\tbuffer = await lingo.downloadAsset(uuid, outFormat.toUpperCase());\n\t\t\t\tawait fs.outputFile(\n\t\t\t\t\t`${outDir}/${fileName}.${outFormat.toLowerCase()}`,\n\t\t\t\t\tbuffer,\n\t\t\t\t\t\"binary\"\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tlog(`Err: ${err}`);\n\t\t\t}\n\t\t});\n\t} catch (err) {\n\t\tlog(`batchDownload(): ${err}`);\n\t}\n}\n\n//////////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////////\n\nexport async function init(\n\tkitName = \"Test Me\",\n\textractTarget = null,\n\toutputDirectory = \"./downloads\",\n\toutputFormat = \"PNG\",\n\tspaceId = null,\n\tapiToken = null,\n\tkitVersion = 0\n) {\n\tif (extractTarget == null) {\n\t\tthrow Error(\"Extract Target is required\");\n\t}\n\tlet lsConfig = getLingoSetupVariables(spaceId, apiToken); //Allow overwriting of env variables\n\tlingo.setup(lsConfig[0], lsConfig[1]); //[0] => spaceId, [1] => apiToken\n\t//TODO: Move formatAssetContainers as a call into getAsssetUuids.\n\t//TODO: Flatten hellback\n\ttry {\n\t\tawait batchDownload(\n\t\t\tawait getAssetUuids(\n\t\t\t\tformatAssetContainers(\n\t\t\t\t\tawait getRelevantAssetContainers(\n\t\t\t\t\t\tawait getKitId(kitName),\n\t\t\t\t\t\textractTarget,\n\t\t\t\t\t\tkitVersion\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\toutputFormat,\n\t\t\toutputDirectory\n\t\t);\n\t} catch (err) {\n\t\tlog(`init() ${err}`);\n\t}\n}\n\n// Working:\n// init(\n// \t\"Capswan - Mobile App - Style Guide\",\n// \tconfig.capswan.targetOne,\n// \t\"./downloads/capswanOne\",\n// \t\"PNG\"\n// );\n\n// Spontaneously stopped working:\n// init(\n// \t\"Capswan - Mobile App - Style Guide\",\n// \tconfig.capswan.targetTwo,\n// \t\"./downloads/capswanTwo\",\n// \t\"png\"\n// );\n// init(\"Test Me\", config.testMe.targetOne, \"./downloads/testMeOne\", \"PNG\");\n// init(\"Test Me\", config.testMe.targetTwo, \"./downloads/testMeTwo\", \"png\");\n","module.exports = require(\"Lingojs\");","export default {\n\ttestMe: {\n\t\ttargetOne: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ttargetTwo: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\",\n\t\t\t\t\theaders: [\"Lined\"]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\tcapswan: {\n\t\ttargetOne: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Illustrations\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Icons\",\n\t\t\t\t\theaders: [\"Icons\", \"Components\"]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\ttargetTwo: {\n\t\t\tsections: [\n\t\t\t\t{\n\t\t\t\t\tname: \"Icons\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n};\n\n/* Sample output from capswanExampleExtractTargetOne =>\n    {\n      \"sections\": [\n        {\n          \"name\": \"Illustrations\",\n          \"uuid\": \"EE0669EA-0FA8-451D-B911-F7299602458F\",\n          \"headers\": []\n        },\n        {\n          \"name\": \"Icons\",\n          \"uuid\": \"9533C6B8-599E-4709-9120-9DA8E10A2922\",\n          \"headers\": [\n            \"32CACAE6-AD11-4FD6-B204-A16A17239D94\",\n            \"51CA5C83-10FA-4420-B768-A68306EF7656\"\n          ]\n        }\n      ]\n    }\n    */\n","module.exports = require(\"dotenv\");"],"sourceRoot":""}